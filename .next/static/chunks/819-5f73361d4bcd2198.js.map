{"version":3,"file":"static/chunks/819-5f73361d4bcd2198.js","mappings":"wIAEA,IAAMA,EAAgBC,CAAAA,EAAAA,QAAAA,EAAAA,CAAWA,CAAC,CAChCC,KAAM,WACNC,aAAc,CAAEC,MAAO,EAAG,EAC1BC,SAAU,CACRC,YAAa,CAACC,EAAOC,KACjBD,EAAMH,KAAK,CAAGI,EAAOC,OAAO,EAEhCC,eAAgB,CAACH,EAAOC,KACtBD,EAAMH,KAAK,EAAII,EAAOC,OACxB,EACAE,UAAW,CAACJ,EAAOC,KACjB,GAAM,OAAEI,CAAK,KAAEC,CAAG,CAAE,CAAGL,EAAOC,OAAO,CACrCF,EAAMH,KAAK,CAAGG,EAAMH,KAAK,CAACU,KAAK,CAAC,EAAGF,GAASC,EAAMN,EAAMH,KAAK,CAACU,KAAK,CAACF,EACtE,EACAG,cAAe,IACXR,EAAMH,KAAK,CAAG,EAClB,CACF,CACF,GAEa,aAAEE,CAAW,CAAEI,gBAAc,CAAEC,WAAS,eAAEI,CAAa,CAAE,CAAGf,EAAcgB,OAAO,CAAC,EAChFhB,EAAciB,OAAO,EAAC,gGCfrC,IAAMC,EAAsBC,CAAAA,EAAAA,EAAAA,aAAAA,CAAaA,MAAsCC,GAElEC,EAAuB,OAAC,CAAEC,UAAQ,CAA4B,GACjE,CAAEC,EAAcC,EAAiB,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,CAAQA,EAAU,GAC5D,MACI,UAACP,EAAoBQ,QAAQ,EAACtB,MAAO,cAAEmB,kBAAcC,CAAgB,WAChEF,GAGb,EAAC,EAEqC,KAClC,IAAMK,EAAUC,CAAAA,EAAAA,EAAAA,UAAAA,CAAUA,CAACV,GAC3B,GAAI,CAACS,EACD,MAAM,CADI,KACM,8DAEpB,OAAOA,CACX,EAAC,0ECvBD,IAAME,EAAa5B,CAAAA,EAAAA,QAAAA,EAAAA,CAAWA,CAAC,CAC3BC,KAAM,QACNC,aAAc,CAAE2B,aAAc,CAAE,EAChCzB,SAAU,CACN0B,gBAAgBxB,CAAK,CAAEC,CAA6B,EAChDD,EAAMuB,YAAY,CAAGtB,EAAOC,OAAO,EAEvCuB,eAAezB,CAAK,CAAEC,CAA6B,EAC/CD,EAAMuB,YAAY,EAAItB,EAAOC,OAAO,EAExCwB,eAAe1B,CAAK,CAAEC,CAA6B,EAC/CD,EAAMuB,YAAY,EAAItB,EAAOC,OAAO,CAE5C,CACJ,GAEa,iBAAEsB,CAAe,gBAAEC,CAAc,gBAAEC,CAAc,CAAE,CAAGJ,EAAWb,OAAO,CAAC,EACvEa,EAAWZ,OAAO,EAAC,qDCjBlC,IAAMiB,EAAWjC,CAAAA,EAAAA,QAAAA,EAAAA,CAAWA,CAAC,CACzBC,KAAM,MACNC,aAAc,CAAEC,MAAO,GAAI,EAC3BC,SAAU,CACN8B,OAAQ,CAAC5B,EAAOC,KACZD,EAAMH,KAAK,CAAGI,EAAOC,OAAO,CAEpC,CACJ,GAEa,CAAE0B,QAAM,CAAE,CAAGD,EAASlB,OAAO,CAAC,EAC5BkB,EAASjB,OAAO,EAAC,yECXhC,IAAMmB,EAAcnC,CAAAA,EAAAA,QAAAA,EAAAA,CAAWA,CAAC,CAC5BC,KAAM,SACNC,aAAc,CAAES,MAAO,CAAE,EACzBP,SAAU,CACNgC,eAAe9B,CAAK,CAAEC,CAA6B,EAC/CD,EAAMK,KAAK,CAAGJ,EAAOC,OAAO,EAEhC6B,qBAAqB/B,CAAK,CAAEC,CAA6B,EACrDD,EAAMK,KAAK,EAAIJ,EAAOC,OAAO,EAEjC8B,qBAAqBhC,CAAK,CAAEC,CAA6B,EACrDD,EAAMK,KAAK,EAAIJ,EAAOC,OAAO,CAErC,CACJ,GAEa,gBAAE4B,CAAc,CAAEC,sBAAoB,sBAAEC,CAAoB,CAAE,CAAGH,EAAYpB,OAAO,CAAC,EACnFoB,EAAYnB,OAAO,EAAC,4HCPnC,MAVyB,IAErB,WAACuB,IAQUC,EARVD,CAAIE,GAQYD,EAAC,KARH,qCACb,UAACD,MAAAA,CAAIE,UAAU,iDACf,UAACF,MAAAA,CAAIE,UAAU,wEACf,UAACF,MAAAA,CAAIE,UAAU,mGCIrB,IAAMC,EAAqC,CACvCC,SAAU,WACVC,WAAY,MACZC,MAAO,QACPC,SAAU,SACVC,SAAU,WACVC,UAAW,cACf,EAmFA,EAjF0B,KACtB,GAAM,YAgFKC,EAhFH3B,CAAY,CAAE,CAAG4B,CAAAA,CAgFPD,CAhFOC,CAgFN,CAhFMA,CAAAA,CAAsBA,GACzCC,EAAaC,CAAAA,EAAAA,EAAAA,EAAAA,CAAWA,CAAC,GAAsB9C,EAAM+C,QAAQ,CAAClD,KAAK,EACnEmD,EAAYF,CAAAA,EAAAA,EAAAA,EAAAA,CAAWA,CAAC,GAAsB9C,EAAMgD,SAAS,CAACnD,KAAK,EACnEoD,EAAMH,CAAAA,EAAAA,EAAAA,EAAAA,CAAWA,CAAC,GAAsB9C,EAAMiD,GAAG,CAACpD,KAAK,EACvDqD,EAAYC,CAAAA,EAAAA,EAAAA,WAAAA,CAAWA,GAAGC,KAAK,CAAC,KAAKC,GAAG,GAE1CC,EAAwB,GACxBC,EAAuB,GAE3B,OAAQL,GACJ,IAAK,aACDI,EAAgB,cAAkB,OAAJL,EAAI,KAClCM,EAAe,IAAQ,OAAJN,GACnB,KACJ,KAAK,WACDK,EAAgB,QAChBC,EAAgB,OAChB,KACJ,SACID,EAAgB,GAChBC,EAAe,EACvB,CAEA,MACA,UAACtB,MAAAA,CAAIE,UAAU,yLACb,WAACF,MAAAA,CAAIE,UAAU,sBACb,UAACqB,EAAAA,CAAeA,CAAAA,CAACC,SAAS,WACrB,CAACzC,GACE,UAAC0C,EAAAA,EAAU,EACPD,QAAS,CAAEE,QAAS,EAAGC,EAAG,CAAE,EAC5BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,CAAE,EAC5BE,KAAM,CAAEH,QAAS,EAAGC,EAAG,CAAC,CAAE,EAC1BG,MAAO3B,WAEP,UAAC4B,KAAAA,UAAG,kBAGhB,UAACR,EAAAA,CAAeA,CAAAA,CAACC,SAAS,WACrBzC,GACG,UAAC0C,EAAAA,EAAU,EACXD,QAAS,CAAEE,QAAS,EAAGC,EAAG,CAAE,EAC5BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,CAAE,EAC5BE,KAAM,CAAEH,QAAS,EAAGC,EAAG,CAAC,CAAE,EAC1BG,MAAO3B,WAEH,UAAC4B,KAAAA,UAAG,eAGhB,WAAC/B,MAAAA,CAAIE,UAAU,+HACX,WAACF,MAAAA,CAAIE,UAAU,6CACX,UAAC8B,OAAAA,CAAK9B,UAAU,yBACZ,UAAC+B,IAAKA,UAAE,EAAFA,EAAoB,OAAdZ,EAAc,SAE9B,UAACa,IAAAA,CAAEhC,UAAU,yBAAgB,MACzB,UAAC+B,IAAKA,CAACE,WAAW,aAAE,IAAe,OAAXvB,EAAW,OACvC,UAACsB,IAAAA,CAAEhC,UAAU,yBAAgB,MAChB,aAAZe,GACD,UAACe,OAAAA,CAAK9B,UAAU,yBACZ,UAAC+B,IAAKA,UAAE,EAAFA,GAAW,OAAJjB,EAAI,YAGxBjC,GAA8B,KAAdgC,GAAoB,UAACd,EAAMA,CAAAA,GAC5C,UAACsB,CAD2CtB,CAC3CsB,CAAeA,CAAAA,CAACC,SAAS,WACP,KAAdT,GACG,WAACU,EAAAA,EAAU,EACXD,QAAS,CAAEE,QAAS,EAAGU,MAAO,CAAE,EAChCR,QAAS,CAAEF,QAAS,EAAGU,MAAO,CAAE,EAChCP,KAAM,CAAEH,QAAS,EAAGU,MAAO,CAAE,EAC7BlC,UAAU,wBACN,UAAC+B,IAAKA,UAAE,EAAFA,GAAiB,OAAVlB,EAAU,OACvB,UAACkB,IAAKA,UAAE,EAAFA,EAAmB,OAAbX,EAAa,mBAOjD,wDC3FO,IAAMe,EAAyB,CAACC,EAAqBlE,KACxD,IAAImE,EAAa,EAEjB,IADAnE,IACOmE,EAAa,EAAG,CACe,KAAK,CAAnCD,EAAYE,MAAM,CAACpE,GACnBmE,IAEqC,KAAK,CAAnCD,EAAYE,MAAM,CAACpE,IAC1BmE,IAGAnE,IAGR,OAAOA,CACX,EAAC,EAEsC,CAACkE,EAAqBlE,KACzD,IAAImE,EAAa,EAEjB,IADAnE,IACOmE,EAAa,EAAG,CACe,KAAK,CAAnCD,EAAYE,MAAM,CAACpE,GACnBmE,IAEqC,KAAK,CAAnCD,EAAYE,MAAM,CAACpE,IAC1BmE,IAGAnE,IAGR,OAAOA,CACX,EAAC,ECvC2BqE,2BAAmC,CAElDC,EAAsB,CAFgC,CAAuB,IAEhDC,EAAoBC,IAOnDC,CANK,MAAMC,MAAMC,EAAY,cAAe,CACjDC,OAAQ,OACRC,QAAS,CAAE,eAAgB,kBAAmB,EAC9CC,KAAMC,KAAKC,SAAS,CAAC,YAAET,WAAYC,CAAS,EAC9C,IAEWS,IAAI,GAGNC,EAAoB,MAAOX,EAAoBC,IAOjDC,CANK,MAAMC,MAAMC,EAAY,YAAa,CAC/CC,OAAQ,OACRC,QAAS,CAAE,eAAgB,kBAAmB,EAC9CC,KAAMC,KAAKC,SAAS,CAAC,YAAET,WAAYC,CAAS,EAC9C,IAEWS,IAAI,iBCmInB,MAnIsD,OAAC,UAAEvE,CAAQ,OAmIlDyE,GAnIoDC,GAAW,CAAK,CAAE,GAC3E,GAkImBD,EAAC,YAlIlBvE,CAAe,CAAE,CAAG2B,CAAAA,EAAAA,EAAAA,CAAAA,CAAsBA,GAC5CvC,EAAQyC,CAAAA,EAAAA,EAAAA,EAAAA,CAAWA,CAAC,GAAsB9C,EAAMK,KAAK,CAACkB,YAAY,EAClEwB,EAAWD,CAAAA,EAAAA,EAAAA,EAAAA,CAAWA,CAAC,GAAsB9C,EAAM+C,QAAQ,CAAClD,KAAK,EACjEoD,EAAMH,CAAAA,EAAAA,EAAAA,EAAAA,CAAWA,CAAC,GAAsB9C,EAAMiD,GAAG,CAACpD,KAAK,EACvD6F,EAAWC,CAAAA,EAAAA,EAAAA,EAAAA,CAAWA,GACtBzC,EAAYC,CAAAA,EAAAA,EAAAA,WAAAA,CAAWA,GAAGC,KAAK,CAAC,KAAKC,GAAG,GAExCuC,EAAc,UAChB3E,GAAgB,GAEhB,IAAM4E,EAAM9C,EAAS+C,OAAO,CAAC,IAAK,IAAIC,UAAU,CAAC,IAAK,QAAQA,UAAU,CAAC,IAAK,WAC9E,OAAQ7C,GACN,IAAK,aACH,IAAM8C,EAAa,MAAMrB,EAAoBkB,EAAK5C,GAClDyC,EAASO,CAAAA,EAAAA,EAAAA,EAAAA,CAAYA,CAACD,CADsBrB,CACXuB,MAAM,GACvC,KACF,KAAK,WACHC,QAAQC,GAAG,CAACP,GACZ,IAAMQ,EAAW,MAAMd,EAAkBM,EAAK5C,GAC9CyC,EAASO,CAAAA,EAAAA,EAAAA,EAAAA,CAD+BV,CAClBc,EAASH,MAAM,GACrC,KACF,SACEC,QAAQG,KAAK,CAAC,oBAClB,CACF,EA+FF,MACI,UAACC,SAAAA,CACGpE,UF1IL,EE0IkBqE,OF1ITA,EAAG,kDAAGC,CAAAA,CAAH,eAAuB,CACxC,MAAOC,CAAAA,EAAAA,EAAAA,EAAAA,CAAOA,CAACC,CAAAA,EAAAA,EAAAA,CAAAA,CAAIA,CAACF,GACtB,EEwI0B,uGAAwGhB,EAAW,+DAAgE,oEACjMmB,QAhGc,CAgGLC,IA/Fb,OAAQ9F,EAAU+F,QAAQ,IACtB,IAAK,IACDlB,IACA,KACJ,KAAK,QAED,IAAMmB,EAAUhE,EAASxC,KAAK,CAAC,EAAGF,GAAO2G,KAAK,CADhC,eAEd,GAAID,EAAS,CACT,IAAME,EAAYF,CAAO,CAACA,EAAQG,MAAM,CAAG,EAAE,CACvCC,EAAiBpE,EAASqE,WAAW,CAACH,GAC5C,GAAIE,EAAiBF,EAAUC,MAAM,GAAK7G,EAAO,CAC7C,IAAMgH,EAAStE,EAASxC,KAAK,CAAC,EAAG4G,GAAkBpE,EAASxC,KAAK,CAAC4G,EAAiBF,EAAUC,MAAM,EACnGxB,EAAS3F,CAAAA,EAAAA,EAAAA,EAAAA,CAAWA,CAACsH,IACrB3B,EAAStF,CAAAA,EAAAA,EAAAA,EAAAA,CAASA,CAAC,CAACC,MAAO8G,EAAgB7G,IAAK,UAAoB,OAAV2G,EAAU,MAAI,IACxEvB,EAASlE,CAAAA,EAAAA,EAAAA,EAAAA,CAAeA,CAAC2F,EAAiB,UAAoB,OAAVF,EAAU,MAAIC,MAAM,GACxExB,EAAS3D,CAAAA,EAAAA,EAAAA,EAAAA,CAAoBA,CAAC,IAC9B,KACJ,CACJ,CACA2D,EAAStF,CAAAA,EAAAA,EAAAA,EAAAA,CAASA,CAAC,CAACC,MAAOA,EAAOC,IAAK,YAAY,IACnDoF,EAASjE,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAAC,IACxBiE,EAAS3D,CAAAA,EAAAA,EAAAA,EAAAA,CAAoBA,CAAC,IAC9B,KACJ,KAAK,YAED,IAAMuF,EAAevE,EAASxC,KAAK,CAAC,EAAGF,GAAO2G,KAAK,CADhC,iBAEnB,GAAIM,EAAc,CACd,IAAML,EAAYK,CAAY,CAACA,EAAaJ,MAAM,CAAG,EAAE,CACjDC,EAAiBpE,EAASqE,WAAW,CAACH,GAC5C,GAAIE,EAAiBF,EAAUC,MAAM,GAAK7G,EAAO,CAC7C,IAAMgH,EAAStE,EAASxC,KAAK,CAAC,EAAG4G,GAAkBpE,EAASxC,KAAK,CAAC4G,EAAiBF,EAAUC,MAAM,EACnGxB,EAAS3F,CAAAA,EAAAA,EAAAA,EAAAA,CAAWA,CAACsH,IACrB3B,EAAStF,CAAAA,EAAAA,EAAAA,EAAAA,CAASA,CAAC,CAACC,MAAO8G,EAAgB7G,IAAK,GAAa,OAAV2G,EAAU,MAAI,IACjEvB,EAASlE,CAAAA,EAAAA,EAAAA,EAAAA,CAAeA,CAAC2F,EAAiB,GAAa,OAAVF,EAAU,MAAIC,MAAM,GACjExB,EAAS3D,CAAAA,EAAAA,EAAAA,EAAAA,CAAoBA,CAAC,GAElC,CACJ,CACA,KACJ,KAAK,WAED,IAAMwF,EAAsBxE,EAASxC,KAAK,CAAC,EAAGF,GAAO2G,KAAK,CADhC,iBAE1B,GAAIO,EAAqB,CACrB,IAAMN,EAAYM,CAAmB,CAACA,EAAoBL,MAAM,CAAG,EAAE,CAC/DC,EAAiBpE,EAASqE,WAAW,CAACH,GAC5C,GAAIE,EAAiBF,EAAUC,MAAM,GAAK7G,EAAO,CAC7C,IAAMgH,EAAStE,EAASxC,KAAK,CAAC,EAAG4G,GAAkBpE,EAASxC,KAAK,CAAC4G,EAAiBF,EAAUC,MAAM,EACnGxB,EAAS3F,CAAAA,EAAAA,EAAAA,EAAAA,CAAWA,CAACsH,IACrB3B,EAAStF,CAAAA,EAAAA,EAAAA,EAAAA,CAASA,CAAC,CAACC,MAAO8G,EAAgB7G,IAAK,GAAa,OAAV2G,EAAU,QAAM,IACnEvB,EAASlE,CAAAA,EAAAA,EAAAA,EAAAA,CAAeA,CAAC2F,EAAiB,GAAa,OAAVF,EAAU,SAAOC,MAAM,GACpExB,EAAS3D,CAAAA,EAAAA,EAAAA,EAAAA,CAAoBA,CAAC,GAElC,CACJ,CACA,KACJ,KAAK,YACD2D,EAAStF,CAAAA,EAAAA,EAAAA,EAAAA,CAASA,CAAC,CAACC,MAAOA,EAAOC,IAAK,UAAU,IACjDoF,EAASjE,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAAC,IACxBiE,EAAS3D,CAAAA,EAAAA,EAAAA,EAAAA,CAAoBA,CAAC,IAC9B,KACJ,KAAK,UACD2D,EAAStF,CAAAA,EAAAA,EAAAA,EAAAA,CAASA,CAAC,CAACC,MAAOA,EAAOC,IAAK,QAAQ,IAC/CoF,EAASjE,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAAC,IACxBiE,EAAS3D,CAAAA,EAAAA,EAAAA,EAAAA,CAAoBA,CAAC,IAC9B,KACJ,KAAK,aACD2D,EAAStF,CAAAA,EAAAA,EAAAA,EAAAA,CAASA,CAAC,CAACC,MAAOA,EAAOC,IAAK,SAAS,IAChDoF,EAASjE,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAAC,IACxBiE,EAAS3D,CAAAA,EAAAA,EAAAA,EAAAA,CAAoBA,CAAC,IAC9B,KACJ,KAAK,WACD2D,EAAStF,CAAAA,EAAAA,EAAAA,EAAAA,CAASA,CAAC,CAACC,MAAOA,EAAOC,IAAK,SAAS,IAChDoF,EAASjE,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAAC,IACxBiE,EAAS3D,CAAAA,EAAAA,EAAAA,EAAAA,CAAoBA,CAAC,IAC9B,KACJ,KAAK,WACD2D,EAAStF,CAAAA,EAAAA,EAAAA,EAAAA,CAASA,CAAC,CAACC,MAAOA,EAAOC,IAAK,SAAS,IAChDoF,EAASjE,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAAC,IACxBiE,EAAS3D,CAAAA,EAAAA,EAAAA,EAAAA,CAAoBA,CAAC,IAC9B,KACJ,KAAK,WACD2D,EAAStF,CAAAA,EAAAA,EAAAA,EAAAA,CAASA,CAAC,CAACC,MAAOA,EAAOC,IAAK,SAAS,IAChDoF,EAASjE,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAAC,IACxBiE,EAAS3D,CAAAA,EAAAA,EAAAA,EAAAA,CAAoBA,CAAC,IAC9B,KACJ,SACI2D,EAAStF,CAAAA,EAAAA,EAAAA,EAAAA,CAASA,CAAC,CAACC,MAAOA,EAAOC,IAAKS,EAAU+F,QAAQ,EAAE,IAC3DpB,EAASjE,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAACV,EAAU+F,QAAQ,GAAGI,MAAM,GACnDxB,EAAS,EAAWoB,QAAQ,GAAGI,MAAM,CAAC,EAAGnF,CAAAA,EAAAA,EAAAA,EAAAA,CAAoBA,CAAC,GAAGA,CAAAA,EAAAA,EAAAA,EAAAA,CAAoBA,CAAC,GAC9F,CACJ,WAOQ,UAACmC,IAAKA,UAAE,EAAFA,EAAe,OAATnD,EAAS,QAGjC,8CCpHA,MA1B0B,KACtB,IAAM2E,EAAWC,CAAAA,EAAAA,EAAAA,EAAAA,CAAWA,CAyBjB6B,EAvBX,KAuBkBA,CAtBhB,+BACE,UAACvF,MAAAA,CAAIE,UAAU,4DACX,WAACF,MAAAA,CAAIE,UAAU,sGACX,UAACsF,QAAAA,CAAMC,QAAQ,MAAMvF,UAAU,kGAAyF,QAGxH,WAACwF,SAAAA,CACGC,GAAG,MACHC,SAAU,GAAWnC,EAAS9D,CAAAA,EAAAA,EAAAA,CAAAA,CAAMA,CAACkG,EAAMC,MAAM,CAAClI,KAAK,GACvDsC,UAAU,8DAEV,UAAC6F,SAAAA,CAAOnI,MAAM,IAAIoI,cAAc,aAAC,MACjC,UAACD,SAAAA,CAAOnI,MAAM,aAAI,MAClB,UAACmI,SAAAA,CAAOnI,MAAM,aAAI,MAClB,UAACmI,SAAAA,CAAOnI,MAAM,mBAAS,eAM3C,ECvBaqI,EAAa,CAACnF,EAAkB1C,EAAeqF,KACxD,GAA8C,iBAA1C3C,EAASoF,SAAS,CAAC9H,EAAOA,EAAQ,IAAwB,CAC1DqF,EAASjE,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAAC,KACxB,MACJ,CAgBA,GAf6C,cAAc,CAAvDsB,EAASoF,SAAS,CAAC9H,EAAOA,EAAQ,IAClCqF,EAASjE,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAAC,IAEiB,WAAW,CAApDsB,EAASoF,SAAS,CAAC9H,EAAOA,EAAQ,IAClCqF,EAASjE,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAAC,IAEiB,UAAU,CAAnDsB,EAASoF,SAAS,CAAC9H,EAAOA,EAAQ,IAClCqF,EAASjE,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAAC,IAEiB,OAAO,CAAhDsB,EAASoF,SAAS,CAAC9H,EAAOA,EAAQ,IAClCqF,EAASjE,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAAC,IAEiB,OAAO,CAAhDsB,EAASoF,SAAS,CAAC9H,EAAOA,EAAQ,IAClCqF,EAASjE,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAAC,IAExBsB,UAASoF,SAAS,CAAC9H,EAAOA,EAAQ,GAAc,CAChDqF,EAASjE,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAAC,IACxB,MACJ,CACA,GAA6C,OAAzCsB,EAASoF,SAAS,CAAC9H,EAAOA,EAAQ,GAAa,CAC/CqF,EAASjE,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAAC,IACxB,MACJ,CACA,GAA6C,QAAzCsB,EAASoF,SAAS,CAAC9H,EAAOA,EAAQ,GAAc,CAChD,IAAM+H,EAAiBrF,EAASsF,OAAO,CAAC,IAAKhI,GACtB,CAAC,GAAG,CAAvB+H,GACJ1C,EAASjE,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAAC2G,EAAiB/H,IAEzC,MACJ,CACIA,EAAQ0C,EAASmE,MAAM,CAAG,GAC1BxB,EAASjE,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAAC,GAEhC,EAAC,EAEyB,CAACsB,EAAkB1C,EAAeqF,KACxDS,QAAQC,GAAG,CAACrD,EAASoF,SAAS,CAAC9H,EAAQ,GAAIA,IACG,eAAe,CAAzD0C,EAASoF,SAAS,CAAC9H,EAAQ,GAAIA,KAC/BqF,EAAShE,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAAC,IACxBgE,EAAS1D,CAAAA,EAAAA,EAAAA,EAAAA,CAAoBA,CAAC,KAEW,aAAa,CAAtDe,EAASoF,SAAS,CAAC9H,EAAQ,EAAGA,IAC9BqF,EAAShE,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAAC,IAEiB,WAAW,CAApDqB,EAASoF,SAAS,CAAC9H,EAAQ,EAAGA,KAC9BqF,EAAShE,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAAC,IACxBgE,EAAS1D,CAAAA,EAAAA,EAAAA,EAAAA,CAAoBA,CAAC,KAEW,WAAW,CAApDe,EAASoF,SAAS,CAAC9H,EAAQ,EAAGA,IAC9BqF,EAAShE,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAAC,IAEiB,UAAU,CAAnDqB,EAASoF,SAAS,CAAC9H,EAAQ,EAAGA,IAC9BqF,EAAShE,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAAC,IAEiB,SAAS,CAAlDqB,EAASoF,SAAS,CAAC9H,EAAQ,EAAGA,IAC9BqF,EAAShE,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAAC,IAEiB,KAAK,CAA9CqB,EAASoF,SAAS,CAAC9H,EAAQ,EAAGA,IAC9BqF,EAAShE,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAAC,IAExBrB,EAAQ,GACRqF,EAAShE,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAAC,GAEhC,EAAC,EAE0B,IACvBgE,EAASlF,CAAAA,EAAAA,EAAAA,EAAAA,CAAaA,IACtBkF,EAASlE,CAAAA,EAAAA,EAAAA,EAAAA,CAAeA,CAAC,IACzBkE,EAAS5D,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAAC,GAC5B,EAEawG,EAAkB,CAACvF,EAAkB1C,EAAeqF,KAC7D,GAA6C,cAAzC3C,EAASoF,SAAS,CAAC9H,EAAQ,EAAGA,GAAwB,CACtD,IAAMgH,EAAStE,EAASoF,SAAS,CAAC,EAAG9H,EAAQ,GAAK0C,EAASoF,SAAS,CAAC9H,GACrEqF,EAAS3F,CAAAA,EAAAA,EAAAA,EAAAA,CAAWA,CAACsH,IACrB3B,EAAShE,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAAC,IACxBgE,EAAS1D,CAAAA,EAAAA,EAAAA,EAAAA,CAAoBA,CAAC,IAC9B,MACJ,CACA,GAAiC,MAA7Be,EAAS0B,MAAM,CAACpE,EAAM,GAAY,CAClC,IAAMkI,EAAoBjE,EAAuBvB,EAAU1C,EAAM,GAEjE,GADA8F,QAAQC,EADwC9B,CACrC,CAACvB,EAASoF,SAAS,CAACI,EAAkB,EAAGA,EAAkB,IACD,WAAjExF,EAASoF,SAAS,CAACI,EAAkB,EAAGA,EAAkB,GAAiB,CAC3E,IAAMlB,EAAStE,EAASoF,SAAS,CAAC,EAAGI,EAAkB,GAAKxF,EAASoF,SAAS,CAAC9H,GAC/EqF,EAAS3F,CAAAA,EAAAA,EAAAA,EAAAA,CAAWA,CAACsH,IACrB3B,EAASlE,CAAAA,EAAAA,EAAAA,EAAAA,CAAeA,CAAC+G,EAAkB,IAC3C7C,EAAS1D,CAAAA,EAAAA,EAAAA,EAAAA,CAAoBA,CAAC,GAClC,CACA,GAA2C,MAAvCe,EAAS0B,MAAM,CAAC8D,GAA4B,CAC5C,IAAMlB,EAAStE,EAASoF,SAAS,CAAC,EAAGI,GAAqBxF,EAASoF,SAAS,CAAC9H,GAC7EqF,EAAS3F,CAAAA,EAAAA,EAAAA,EAAAA,CAAWA,CAACsH,IACrB3B,EAASlE,CAAAA,EAAAA,EAAAA,EAAAA,CAAeA,CAAC+G,IACzB7C,EAAS1D,CAAAA,EAAAA,EAAAA,EAAAA,CAAoBA,CAAC,GAClC,CACA,GAA2C,MAAvCe,EAAS0B,MAAM,CAAC8D,GAA4B,CAC5C,IAAMC,EAA0BlE,EAAuBvB,EAAUwF,GACjE,GAAiF,WAA7ExF,CADkDuB,CACzC6D,SAAS,CAACK,EAAwB,EAAGA,EAAwB,GAAiB,CACvF,IAAMnB,EAAStE,EAASoF,SAAS,CAAC,EAAGK,EAAwB,GAAKzF,EAASoF,SAAS,CAAC9H,GACrFqF,EAAS3F,CAAAA,EAAAA,EAAAA,EAAAA,CAAWA,CAACsH,IACrB3B,EAASlE,CAAAA,EAAAA,EAAAA,EAAAA,CAAeA,CAACgH,EAAwB,IACjD9C,EAAS1D,CAAAA,EAAAA,EAAAA,EAAAA,CAAoBA,CAAC,GAClC,CACJ,CACJ,CACA,GAAIe,QAAS0B,MAAM,CAACpE,EAAM,GAAY,CAClC,IAAMoI,EAA0BC,EAAwB3F,EAAU1C,EAAM,GACxE,GAAiF,UAA7E0C,CADmD2F,CAC1CP,SAAS,CAACM,EAAwB,EAAGA,EAAwB,GAAgB,CACtF,IAAMpB,EAAStE,EAASoF,SAAS,CAAC,EAAGM,EAAwB,GAAK1F,EAASoF,SAAS,CAAC9H,GACrFqF,EAAS3F,CAAAA,EAAAA,EAAAA,EAAAA,CAAWA,CAACsH,IACrB3B,EAASlE,CAAAA,EAAAA,EAAAA,EAAAA,CAAeA,CAACiH,EAAwB,IACjD/C,EAAS1D,CAAAA,EAAAA,EAAAA,EAAAA,CAAoBA,CAAC,GAClC,CACA,GAAiF,UAA7Ee,EAASoF,SAAS,CAACM,EAAwB,EAAGA,EAAwB,GAAgB,CACtF,IAAMpB,EAAStE,EAASoF,SAAS,CAAC,EAAGM,EAAwB,GAAK1F,EAASoF,SAAS,CAAC9H,GACrFqF,EAAS3F,CAAAA,EAAAA,EAAAA,EAAAA,CAAWA,CAACsH,IACrB3B,EAASlE,CAAAA,EAAAA,EAAAA,EAAAA,CAAeA,CAACiH,EAAwB,IACjD/C,EAAS1D,CAAAA,EAAAA,EAAAA,EAAAA,CAAoBA,CAAC,GAClC,CACA,GAAiF,UAA7Ee,EAASoF,SAAS,CAACM,EAAwB,EAAGA,EAAwB,GAAgB,CACtF,IAAMpB,EAAStE,EAASoF,SAAS,CAAC,EAAGM,EAAwB,GAAK1F,EAASoF,SAAS,CAAC9H,GACrFqF,EAAS3F,CAAAA,EAAAA,EAAAA,EAAAA,CAAWA,CAACsH,IACrB3B,EAASlE,CAAAA,EAAAA,EAAAA,EAAAA,CAAeA,CAACiH,EAAwB,IACjD/C,EAAS1D,CAAAA,EAAAA,EAAAA,EAAAA,CAAoBA,CAAC,GAClC,CACA,GAAiF,UAA7Ee,EAASoF,SAAS,CAACM,EAAwB,EAAGA,EAAwB,GAAgB,CACtF,IAAMpB,EAAStE,EAASoF,SAAS,CAAC,EAAGM,EAAwB,GAAK1F,EAASoF,SAAS,CAAC9H,GACrFqF,EAAS3F,CAAAA,EAAAA,EAAAA,EAAAA,CAAWA,CAACsH,IACrB3B,EAASlE,CAAAA,EAAAA,EAAAA,EAAAA,CAAeA,CAACiH,EAAwB,IACjD/C,EAAS1D,CAAAA,EAAAA,EAAAA,EAAAA,CAAoBA,CAAC,GAClC,CACA,GAAiF,SAA7Ee,EAASoF,SAAS,CAACM,EAAwB,EAAGA,EAAwB,GAAe,CACrF,IAAMpB,EAAStE,EAASoF,SAAS,CAAC,EAAGM,EAAwB,GAAK1F,EAASoF,SAAS,CAAC9H,GACrFqF,EAAS3F,CAAAA,EAAAA,EAAAA,EAAAA,CAAWA,CAACsH,IACrB3B,EAASlE,CAAAA,EAAAA,EAAAA,EAAAA,CAAeA,CAACiH,EAAwB,IACjD/C,EAAS1D,CAAAA,EAAAA,EAAAA,EAAAA,CAAoBA,CAAC,GAClC,CACJ,CAEA,GADc,mBACJ2G,IAAI,CAAC5F,EAAS0B,MAAM,CAACpE,EAAM,IAAK,CACtC,IAAMgH,EAAStE,EAASoF,SAAS,CAAC,EAAG9H,EAAM,GAAK0C,EAASoF,SAAS,CAAC9H,GACnEqF,EAAS3F,CAAAA,EAAAA,EAAAA,EAAAA,CAAWA,CAACsH,IACrB3B,EAAShE,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAAC,IACxBgE,EAAS1D,CAAAA,EAAAA,EAAAA,EAAAA,CAAoBA,CAAC,IAC9B,MACJ,CACJ,EAAC,ECrJ2B,OAAC,EAAE,GACrB0D,EAAWC,CAAAA,CAuCNiD,CAvCMjD,EAAAA,EAAAA,CAAWA,GACtBtF,EAAQyC,CAAAA,EAAAA,EAAAA,EAAAA,CAAWA,CAAC,GAAsB9C,EAAMK,KAAK,CAACkB,YAAY,EAClEwB,EAAWD,CAAAA,EAAAA,EAAAA,EAAAA,CAAWA,CAAC,GAAsB9C,EAAM+C,QAAQ,CAAClD,KAAK,EAGvE,MACI,WAACoC,MAAAA,CAAIE,UAAU,0CACX,UAACqF,EAAOA,CAAAA,GACR,WAACvF,CADOuF,KACPvF,CAAIE,UAAU,mDACX,UAACoE,SAAAA,CACGpE,UAAU,yMACVyE,QAAS,IAAIiC,EAAYnD,SAADmD,GAExB,UAACC,KAAAA,UAAG,QAER,UAACvC,SAAAA,CACGpE,UAAU,0MACVyE,QAAS,IAAI0B,EAAgBvF,EAAU1C,EAAOqF,SAAlB4C,GAE5B,UAACS,EAAAA,CAAMA,CAAAA,CAAC5G,UAAU,gCAEtB,UAACoE,SAAAA,CACGpE,UAAU,0MACVyE,QAAS,IAAIoC,EAAWjG,EAAU1C,EAAOqF,IAAlBsD,QAEvB,UAACC,EAAAA,CAAWA,CAAAA,CAAC9G,UAAU,gCAE3B,UAACoE,SAAAA,CACGpE,UAAU,0MACVyE,QAAS,IAAIsB,EAAWnF,EAAU1C,EAAOqF,IAAlBwC,QAEvB,UAACgB,EAAAA,CAAYA,CAAAA,CAAC/G,UAAU,qCAK5C,ECCA,EAzC2B,OAAC,EAAE,GAC1B,MACI,iCACI,UAACyG,EAASA,CAAAA,GACV,QADUA,CACV,EAAC3G,MAAAA,CAAIE,UAAU,0CACf,UAACqD,EAAcA,UAAC,MAChB,UAACA,EAAcA,UAAC,MAChB,KADeA,GACf,EAACA,EAAcA,UAAC,MAChB,KADeA,GACf,EAACA,EAAcA,UAAC,WAADA,GACf,UAACA,EAAcA,UAAC,UAChB,UAACA,EAAcA,UAAC,MAChB,KADeA,GACf,EAACA,EAAcA,UAAC,MAChB,KADeA,GACf,EAACA,EAAcA,UAAC,MAChB,UAACA,EAAcA,UAAC,MAChB,UAACA,EAAcA,UAAC,MAChB,KADeA,GACf,EAACA,EAAcA,UAAC,MAChB,UAACA,EAAcA,UAAC,MAChB,KADeA,GACf,EAACA,EAAcA,UAAC,MAChB,KADeA,GACf,EAACA,EAAcA,CAACC,QAAQ,YAATD,CAAU,MACzB,UAACA,EAAcA,CAACC,QAAQ,YAATD,CAAU,MACzB,UAACA,EAAcA,CAACC,QAAQ,YAATD,CAAU,MACzB,UAACA,EAAcA,UAAC,MAChB,KADeA,GACf,EAACA,EAAcA,CAACC,QAAQ,YAATD,CAAU,MACzB,UAACA,EAAcA,CAACC,QAAQ,YAATD,CAAU,MACzB,UAACA,EAAcA,CAACC,QAAQ,YAATD,CAAU,MACzB,UAACA,EAAcA,CAACC,QAAQ,YAATD,CAAW,UAC1B,UAACA,EAAcA,CAACC,QAAQ,YAATD,CAAW,cAC1B,UAACA,EAAcA,CAACC,QAAQ,YAATD,CAAW,aAC1B,UAACA,EAAcA,CAACC,QAAQ,YAATD,CAAW,cAC1B,UAACA,EAAcA,CAACC,QAAQ,YAATD,CAAW,YAC1B,UAACA,EAAcA,CAACC,QAAQ,YAATD,CAAW,eAC1B,UAACA,EAAcA,CAACC,QAAQ,YAATD,CAAW,aAC1B,UAACA,EAAcA,CAACC,QAAQ,YAATD,CAAW,aAC1B,UAACA,EAAcA,CAACC,QAAQ,YAATD,CAAW,aAC1B,UAACA,EAAcA,CAACC,QAAQ,YAATD,CAAU,WAIrC,EC4BA,EAzD6B,KAC3B,GAAM,eAwDO2D,EAxDLlI,CAAe,CAAE,CAAG2B,CAAAA,EAAAA,EAAAA,CAAAA,CAAsBA,GAC5CG,EAAWD,CAAAA,EAAAA,EAAAA,EAAAA,CAAWA,CAAC,GAAsB9C,EAAM+C,QAAQ,CAAClD,KAAK,EACjEQ,EAAQyC,CAAAA,EAAAA,EAAAA,EAAAA,CAAWA,CAAC,GAAsB9C,EAAMK,KAAK,CAACkB,YAAY,EAClEmE,EAAWC,CAAAA,EAAAA,EAAAA,EAAAA,CAAWA,GACtBzC,EAAYC,CAAAA,EAAAA,EAAAA,WAAAA,CAAWA,GAAGC,KAAK,CAAC,KAAKC,GAAG,GA0C9C,MAxCA+F,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,CAAC,KACRnI,GAAgB,GAChByE,EAAS2D,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,GACzB,EAAG,CAACtG,EAAS,EAEbqG,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,CAAC,KACR1D,EAAS2D,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,IACvBpI,EAAgB,GAClB,EAAG,CAACiC,EAAU,EAEdkG,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,CAAC,KACR,IAAME,EAAkBvG,EAAS+C,OAAO,CAAC,IAAK,IACxCyD,EAAcD,EAAgB/I,KAAK,CAAC,EAAGF,GAAS,IAAMiJ,EAAgB/I,KAAK,CAACF,GAClFqF,EAAS3F,CAAAA,EAAAA,EAAAA,EAAAA,CAAWA,CAACwJ,GACvB,EAAG,CAAClJ,EAAM,EA2BR,UAAC4B,MAAAA,CAAIE,UAAU,4DACb,WAACF,MAAAA,CAAIE,UAAU,iCACb,UAACQ,EAAOA,CAAAA,GACR,UAAC6G,EADO7G,CACC6G,OAIjB,OAJiBA,4DC9DjB,IAAMC,EAAiB/J,CAAAA,EAAAA,QAAAA,EAAAA,CAAWA,CAAC,CAC/BC,KAAM,YACNC,aAAc,CAAEC,MAAO,EAAG,EAC1BC,SAAU,CACNmG,aAAc,CAACjG,EAAOC,KAClBD,EAAMH,KAAK,CAAGI,EAAOC,OAAO,EAEhCmJ,eAAgB,IACZrJ,EAAMH,KAAK,CAAG,EAClB,CACJ,CACJ,GAEa,CAAEoG,cAAY,gBAAEoD,CAAc,CAAE,CAAGI,EAAehJ,OAAO,CAAC,EACxDgJ,EAAe/I,OAAO,EAAC,eChBtC,sCAA6K","sources":["webpack://_N_E/./src/redux/inputTexSlice.ts","webpack://_N_E/./src/context/context.tsx","webpack://_N_E/./src/redux/indexSlice.ts","webpack://_N_E/./src/redux/wrtSlice.ts","webpack://_N_E/./src/redux/cursorSlice.ts","webpack://_N_E/./src/components/Loader.tsx","webpack://_N_E/./src/components/Display.tsx","webpack://_N_E/./src/app/utils/helpers.ts","webpack://_N_E/./src/app/utils/calculate.ts","webpack://_N_E/./src/components/Keyboard/KeyboardButton.tsx","webpack://_N_E/./src/components/Options.tsx","webpack://_N_E/./src/redux/handler.ts","webpack://_N_E/./src/components/Keyboard/NavigationKeys.tsx","webpack://_N_E/./src/components/Keyboard/Keyboard.tsx","webpack://_N_E/./src/components/Calculator.tsx","webpack://_N_E/./src/redux/resultTexSlice.ts","webpack://_N_E/?d9c2"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nconst inputTexSlice = createSlice({\n  name: \"inputTex\",\n  initialState: { value: \"\" },\n  reducers: {\n    setInputTex: (state, action: PayloadAction<string>) => {\n        state.value = action.payload;\n    },\n    appendInputTex: (state, action: PayloadAction<string>) => {\n      state.value += action.payload;\n    },\n    insertTex: (state, action: PayloadAction<{ index: number, tex: string }>) => {\n      const { index, tex } = action.payload;\n      state.value = state.value.slice(0, index) + tex + state.value.slice(index);\n    },\n    clearInputTex: (state) => {\n        state.value = \"\";\n    }\n  },\n});\n\nexport const { setInputTex, appendInputTex, insertTex, clearInputTex } = inputTexSlice.actions;\nexport default inputTexSlice.reducer;\n","'use client'\nimport { createContext, useContext, useState, ReactNode } from \"react\";\n\ntype AnswerToggleContextType = {\n    answerToggle: boolean;\n    setAnswerToggle: (state: boolean) => void;\n}\n\nconst AnswerToggleContext = createContext<AnswerToggleContextType | undefined>(undefined);\n\nexport const AnswerToggleProvider = ({ children } : { children: ReactNode }) => {\n    const [ answerToggle, setAnswerToggle ] = useState<boolean>(false);\n    return (\n        <AnswerToggleContext.Provider value={{ answerToggle, setAnswerToggle }}>\n            {children}\n        </AnswerToggleContext.Provider>\n    )\n}\n\nexport const useAnswerToggleContext = () => {\n    const context = useContext(AnswerToggleContext);\n    if (!context) {\n        throw new Error(\"useAnswerToggle must be used within a AnswerToggleProvider\");\n    }\n    return context;\n}\n\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nconst indexSlice = createSlice({\n    name: \"index\",\n    initialState: { currentIndex: 0 },\n    reducers: {\n        setCurrentIndex(state, action: PayloadAction<number>) {\n            state.currentIndex = action.payload;\n        },\n        incrementIndex(state, action: PayloadAction<number>) {\n            state.currentIndex += action.payload;\n        },\n        decrementIndex(state, action: PayloadAction<number>) {\n            state.currentIndex -= action.payload;\n        },\n    },\n});\n\nexport const { setCurrentIndex, incrementIndex, decrementIndex } = indexSlice.actions;\nexport default indexSlice.reducer;","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nconst wrtSlice = createSlice({\n    name: \"wrt\",\n    initialState: { value: \"x\" },\n    reducers: {\n        setWrt: (state, action: PayloadAction<string>) => {\n            state.value = action.payload;\n        }\n    }\n})\n\nexport const { setWrt } = wrtSlice.actions;\nexport default wrtSlice.reducer;","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nconst cursorSlice = createSlice({\n    name: \"cursor\",\n    initialState: { index: 0 },\n    reducers: {\n        setCursorIndex(state, action: PayloadAction<number>) {\n            state.index = action.payload;\n        },\n        incrementCursorIndex(state, action: PayloadAction<number>) {\n            state.index += action.payload;\n        },\n        decrementCursorIndex(state, action: PayloadAction<number>) {\n            state.index -= action.payload;\n        },\n    },\n});\n\nexport const { setCursorIndex, incrementCursorIndex, decrementCursorIndex } = cursorSlice.actions;\nexport default cursorSlice.reducer;","import React from 'react';\n\nconst Loader: React.FC = () => {\n  return (\n    <div className=\"flex flex-row gap-2 mt-4\">\n      <div className=\"w-4 h-4 rounded-full bg-white animate-bounce\" />\n      <div className=\"w-4 h-4 rounded-full bg-white animate-bounce [animation-delay:-.3s]\" />\n      <div className=\"w-4 h-4 rounded-full bg-white animate-bounce [animation-delay:-.5s]\" />\n    </div>\n  );\n}\n\nexport default Loader;\n","'use client'\nimport React from 'react';\nimport { usePathname } from \"next/navigation\";\nimport { AnimatePresence } from \"motion/react\";\nimport * as motion from \"motion/react-client\";\nimport Latex from 'react-latex';\nimport Loader from \"./Loader\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"@/redux/store\";\nimport { useAnswerToggleContext } from '@/context/context';\n\nconst displayHeader: React.CSSProperties = {\n    fontSize: '1.125rem',\n    fontWeight: '600',\n    color: 'white',\n    overflow: 'hidden',\n    position: 'absolute',\n    translate: '0rem -2.5rem'\n};\n\nconst Display: React.FC = () => {\n    const { answerToggle } = useAnswerToggleContext();\n    const displayTex = useSelector((state: RootState) => state.inputTex.value);\n    const resultTex = useSelector((state: RootState) => state.resultTex.value);\n    const wrt = useSelector((state: RootState) => state.wrt.value);\n    const operation = usePathname().split(\"/\").pop();\n    \n    let previewPrefix: string = \"\";\n    let answerSuffix: string = \"\"\n\n    switch (operation) {\n        case \"derivative\":\n            previewPrefix = `\\\\frac{d}{d${wrt}}`;\n            answerSuffix = `d${wrt}`;\n            break;\n        case \"integral\":\n            previewPrefix = \"\\\\int\";\n            answerSuffix = ` + c`;\n            break;\n        default:\n            previewPrefix = \"\";\n            answerSuffix = \"\";\n    }\n\n    return (\n    <div className=\"pt-8 bg-[#00c4eb] text-white dark:bg-gray-800 rounded-lg overflow-hidden shadow-lg transition-shadow duration-300 hover:shadow-xl border border-gray-200 dark:border-gray-700\">\n      <div className=\"px-6 py-4\">\n        <AnimatePresence initial={true}>\n            {!answerToggle &&\n                <motion.div\n                    initial={{ opacity: 0, y: 5 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    exit={{ opacity: 0, y: -5 }}\n                    style={displayHeader}\n                >\n                    <h3> Preview </h3>\n                </motion.div>}\n        </AnimatePresence>\n        <AnimatePresence initial={false}>\n            {answerToggle &&\n                <motion.div\n                initial={{ opacity: 0, y: 0 }}\n                animate={{ opacity: 1, y: 5 }}\n                exit={{ opacity: 0, y: -5 }}\n                style={displayHeader}\n                >\n                    <h3>Answer</h3>\n                </motion.div>}\n        </AnimatePresence>\n        <div className=\"overflow-hidden py-3 px-2 bg-[#3288d9] dark:bg-gray-900 rounded-md text-2xl min-w-[100%] sm:min-w-md tracking-wide\">\n            <div className=\"inline-flex items-center gap-0.5\">\n                <span className=\"text-3xl mr-1\">\n                    <Latex>{`$${previewPrefix}$`}</Latex>\n                </span>\n                <p className=\"text-3xl pb-1\">&#40;</p>\n                    <Latex displayMode>{`$${displayTex}$`}</Latex>\n                <p className=\"text-3xl pb-1\">&#41;</p>\n                {operation===\"integral\" &&\n                <span className=\"text-3xl mr-1\">\n                    <Latex>{`$d${wrt}$`}</Latex>\n                </span>}\n            </div>\n            {answerToggle && resultTex === \"\" && <Loader/>}\n            <AnimatePresence initial={false}>\n                {resultTex !== \"\" &&\n                    <motion.div\n                    initial={{ opacity: 0, scale: 0 }}\n                    animate={{ opacity: 1, scale: 1 }}\n                    exit={{ opacity: 0, scale: 0 }}\n                    className=\"w-full mt-2\">\n                        <Latex>{`$=${resultTex}$`}</Latex>\n                        <Latex>{`$${answerSuffix}$`}</Latex>\n                    </motion.div>}\n            </AnimatePresence>\n        </div>\n      </div>\n    </div>\n    );\n};\n\n\nexport default Display;","import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\nexport const findMatchingCurlyBrace = (inputString: string, index: number) => {\n    let braceCount = 1;\n    index--;\n    while (braceCount > 0) {\n        if (inputString.charAt(index) === \"{\") {\n            braceCount--;\n            index--;\n        } else if (inputString.charAt(index) === \"}\") {\n            braceCount++;\n            index--;\n        } else {\n            index--;\n        }\n    }\n    return index;\n}\n\nexport const findMatchingParenthesis = (inputString: string, index: number) => {\n    let braceCount = 1;\n    index--;\n    while (braceCount > 0) {\n        if (inputString.charAt(index) === \"(\") {\n            braceCount--;\n            index--;\n        } else if (inputString.charAt(index) === \")\") {\n            braceCount++;\n            index--;\n        } else {\n            index--;\n        }\n    }\n    return index;\n}","const BACKEND_URL: string = process.env.NEXT_PUBLIC_BACKEND_URL || \"http://localhost:3001\";\n\nexport const calculateDerivative = async (expression: string, variable: string) => {\n    const res = await fetch(BACKEND_URL+\"/derivative\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ expression, variable }),\n    });\n  \n    return res.json();\n  };\n\nexport const calculateIntegral = async (expression: string, variable: string) => {\n    const res = await fetch(BACKEND_URL+\"/integral\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ expression, variable }),\n    });\n  \n    return res.json();\n  };","'use client'\nimport React from 'react';\nimport Latex from 'react-latex';\nimport { usePathname } from 'next/navigation';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState, AppDispatch } from \"@/redux/store\";\nimport { insertTex, setInputTex } from \"@/redux/inputTexSlice\";\nimport { setCurrentIndex, incrementIndex } from '@/redux/indexSlice';\nimport { incrementCursorIndex } from \"@/redux/cursorSlice\";\nimport { useAnswerToggleContext } from '@/context/context';\nimport { cn } from '@/app/utils/helpers';\nimport { calculateDerivative, calculateIntegral } from '@/app/utils/calculate';\nimport { setResultTex } from '@/redux/resultTexSlice';\n\ninterface KeyboardButtonProps {\n    children: React.ReactNode;\n    specieal?: boolean\n}\n\nconst KeyboardButton: React.FC<KeyboardButtonProps> = ({ children, specieal = false }) => {\n    const { setAnswerToggle } = useAnswerToggleContext();\n    const index = useSelector((state: RootState) => state.index.currentIndex);\n    const inputTex = useSelector((state: RootState) => state.inputTex.value);\n    const wrt = useSelector((state: RootState) => state.wrt.value);\n    const dispatch = useDispatch<AppDispatch>();\n    const operation = usePathname().split(\"/\").pop();\n\n    const fetchResult = async () => {\n        setAnswerToggle(true);\n    \n        const eqn = inputTex.replace(\"|\", \"\").replaceAll(\"π\", \"\\\\pi\").replaceAll(\"θ\", \"\\\\theta\");\n        switch (operation) {\n          case \"derivative\":\n            const derivative = await calculateDerivative(eqn, wrt);\n            dispatch(setResultTex(derivative.result));\n            break;\n          case \"integral\":\n            console.log(eqn)\n            const integral = await calculateIntegral(eqn, wrt);\n            dispatch(setResultTex(integral.result));\n            break;\n          default:\n            console.error(\"Invalid operation\");\n        }\n      };\n\n    const handleOnClick = () => {\n        switch (children!.toString()) {\n            case \"=\":\n                fetchResult();\n                break;\n            case \"\\\\div\":\n                const regex = /[0-9xyzθ]+/g;\n                const matches = inputTex.slice(0, index).match(regex);\n                if (matches) {\n                    const lastMatch = matches[matches.length - 1];\n                    const lastMatchIndex = inputTex.lastIndexOf(lastMatch);\n                    if (lastMatchIndex + lastMatch.length === index) {\n                        const newTex = inputTex.slice(0, lastMatchIndex) + inputTex.slice(lastMatchIndex + lastMatch.length);\n                        dispatch(setInputTex(newTex));\n                        dispatch(insertTex({index: lastMatchIndex, tex: `\\\\frac{${lastMatch}}{}`}));\n                        dispatch(setCurrentIndex(lastMatchIndex + `\\\\frac{${lastMatch}}{`.length));\n                        dispatch(incrementCursorIndex(1));\n                        break;\n                    }\n                }\n                dispatch(insertTex({index: index, tex: \"\\\\frac{}{}\"}));\n                dispatch(incrementIndex(6));\n                dispatch(incrementCursorIndex(1));\n                break;\n            case \"[~]^{[~]}\":\n                const boxedRegex = /[0-9exyzθπ]+/g;\n                const boxedMatches = inputTex.slice(0, index).match(boxedRegex);\n                if (boxedMatches) {\n                    const lastMatch = boxedMatches[boxedMatches.length - 1];\n                    const lastMatchIndex = inputTex.lastIndexOf(lastMatch);\n                    if (lastMatchIndex + lastMatch.length === index) {\n                        const newTex = inputTex.slice(0, lastMatchIndex) + inputTex.slice(lastMatchIndex + lastMatch.length);\n                        dispatch(setInputTex(newTex));\n                        dispatch(insertTex({index: lastMatchIndex, tex: `${lastMatch}^{}`}));\n                        dispatch(setCurrentIndex(lastMatchIndex + `${lastMatch}^{`.length));\n                        dispatch(incrementCursorIndex(1));\n                        break;\n                    }\n                }\n                break;\n            case \"[~]^{-1}\":\n                const boxedInverseRegex = /[0-9exyzθπ]+/g;\n                const boxedInverseMatches = inputTex.slice(0, index).match(boxedInverseRegex);\n                if (boxedInverseMatches) {\n                    const lastMatch = boxedInverseMatches[boxedInverseMatches.length - 1];\n                    const lastMatchIndex = inputTex.lastIndexOf(lastMatch);\n                    if (lastMatchIndex + lastMatch.length === index) {\n                        const newTex = inputTex.slice(0, lastMatchIndex) + inputTex.slice(lastMatchIndex + lastMatch.length);\n                        dispatch(setInputTex(newTex));\n                        dispatch(insertTex({index: lastMatchIndex, tex: `${lastMatch}^{-1}`}));\n                        dispatch(setCurrentIndex(lastMatchIndex + `${lastMatch}^{-1}`.length));\n                        dispatch(incrementCursorIndex(3));\n                        break;\n                    }\n                }\n                break;\n            case \"\\\\sqrt{~}\":\n                dispatch(insertTex({index: index, tex: \"\\\\sqrt{}\"}));\n                dispatch(incrementIndex(6))\n                dispatch(incrementCursorIndex(1));\n                break;\n            case \"\\\\ln(~)\":\n                dispatch(insertTex({index: index, tex: \"\\\\ln()\"}));\n                dispatch(incrementIndex(4));\n                dispatch(incrementCursorIndex(4));\n                break;\n            case \"\\\\log{(~)}\":\n                dispatch(insertTex({index: index, tex: \"\\\\log()\"}));\n                dispatch(incrementIndex(5));\n                dispatch(incrementCursorIndex(5));\n                break;\n            case \"\\\\sin(~)\":\n                dispatch(insertTex({index: index, tex: \"\\\\sin()\"}));\n                dispatch(incrementIndex(5));\n                dispatch(incrementCursorIndex(5));\n                break;\n            case \"\\\\cos(~)\":\n                dispatch(insertTex({index: index, tex: \"\\\\cos()\"}));\n                dispatch(incrementIndex(5));\n                dispatch(incrementCursorIndex(5));\n                break;\n            case \"\\\\tan(~)\":\n                dispatch(insertTex({index: index, tex: \"\\\\tan()\"}));\n                dispatch(incrementIndex(5));\n                dispatch(incrementCursorIndex(5));\n                break; \n            default:\n                dispatch(insertTex({index: index, tex: children!.toString()}));\n                dispatch(incrementIndex(children!.toString().length));\n                dispatch((children!.toString().length>1)?incrementCursorIndex(3):incrementCursorIndex(1))\n        }\n    }\n\n    return (\n        <button \n            className={cn(\"px-4 py-2.5 text-lg rounded-lg active:scale-95 sm:hover:scale-105 transform ease-in-out duration-150\", specieal ? \"text-white font-semibold bg-white-mode-blue dark:bg-blue-700\": \"font-mono border-2 border-white-mode-blue dark:border-muted-teal\")}\n            onClick={handleOnClick}\n        >\n            <Latex>{`$${children}$`}</Latex>\n        </button>\n    );\n};\n\n\nexport default KeyboardButton;","import { AppDispatch } from '@/redux/store';\nimport { setWrt } from '@/redux/wrtSlice';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst Options: React.FC = () => {\n    const dispatch = useDispatch<AppDispatch>();\n\n    return (\n      <>\n        <div className=\"flex flex-row w-min m-1 justify-center mt-5 mx-2\">\n            <div className=\"flex flex-col ml-2 border-2 border-white-mode-blue dark:border-muted-teal rounded-xl mr-2\">\n                <label htmlFor=\"wrt\" className=\"block text-sm font-bold m-1.5 border-b-2 border-white-mode-blue dark:border-muted-teal\">\n                    WRT\n                </label>\n                <select\n                    id=\"wrt\"\n                    onChange={(event) => dispatch(setWrt(event.target.value))}\n                    className=\"h-min w-min p-1.5 ml-0.5 font-mono text-md italic\"\n                >\n                    <option value=\"x\" defaultChecked>x</option>\n                    <option value=\"y\">y</option>\n                    <option value=\"z\">z</option>\n                    <option value=\"\\theta\">θ</option>\n                </select>\n            </div>\n        </div>\n      </>\n    );\n};\n\nexport default Options;","import { incrementIndex, decrementIndex, setCurrentIndex } from \"./indexSlice\";\nimport { setCursorIndex, decrementCursorIndex } from \"./cursorSlice\";\nimport { clearInputTex, setInputTex } from \"./inputTexSlice\";\nimport { AppDispatch } from \"./store\";\nimport { findMatchingCurlyBrace, findMatchingParenthesis } from \"@/app/utils/helpers\";\n\nexport const handleNext = (inputTex: string, index: number, dispatch: AppDispatch) => {\n    if (inputTex.substring(index, index + 11) === \"|\\\\log_{10}(\") {\n        dispatch(incrementIndex(10))\n        return\n    }\n    if (inputTex.substring(index, index + 9) === \"|~\\\\times~\") {\n        dispatch(incrementIndex(7))\n    }\n    if (inputTex.substring(index, index + 6) === \"|\\\\log(\") {\n        dispatch(incrementIndex(5))\n    }\n    if (inputTex.substring(index, index + 5) === \"|\\\\ln(\") {\n        dispatch(incrementIndex(4))\n    }\n    if (inputTex.substring(index, index + 3) === \"|^{\") {\n        dispatch(incrementIndex(1))\n    }\n    if (inputTex.substring(index, index + 3) === \"|~}\") {\n        dispatch(incrementIndex(2))\n    }\n    if (inputTex.substring(index, index + 3) === \"|}{\") {\n        dispatch(incrementIndex(2))\n        return\n    }\n    if (inputTex.substring(index, index + 2) === \"|}\") {\n        dispatch(incrementIndex(1))\n        return\n    }\n    if (inputTex.substring(index, index + 2) === \"|\\\\\") {\n        const nextBraceIndex = inputTex.indexOf(\"{\", index);\n        if (nextBraceIndex !== -1) {\n        dispatch(incrementIndex(nextBraceIndex - index));\n        }\n        return;\n    }\n    if (index < inputTex.length - 1) {\n        dispatch(incrementIndex(1))\n    }\n}\n\nexport const handlePrev = (inputTex: string, index: number, dispatch: AppDispatch) => {\n    console.log(inputTex.substring(index - 10, index));\n    if (inputTex.substring(index - 10, index) === \"\\\\log_{10}(\") {\n        dispatch(decrementIndex(9))\n        dispatch(decrementCursorIndex(4));\n    }\n    if (inputTex.substring(index - 8, index) === \"~\\\\times~\") {\n        dispatch(decrementIndex(7))\n    }\n    if (inputTex.substring(index - 6, index) === \"\\\\frac{\") {\n        dispatch(decrementIndex(4))\n        dispatch(decrementCursorIndex(2));\n    }\n    if (inputTex.substring(index - 6, index) === \"\\\\sqrt{\") {\n        dispatch(decrementIndex(4))\n    }\n    if (inputTex.substring(index - 5, index) === \"\\\\log(\") {\n        dispatch(decrementIndex(4))\n    }\n    if (inputTex.substring(index - 4, index) === \"\\\\ln(\") {\n        dispatch(decrementIndex(3))\n    }\n    if (inputTex.substring(index - 1, index) === \"{\") {\n        dispatch(decrementIndex(1))\n    }\n    if (index > 0) {\n        dispatch(decrementIndex(1));\n    }\n}\n\nexport const handleClear = (dispatch: AppDispatch) => {\n    dispatch(clearInputTex());\n    dispatch(setCurrentIndex(0));\n    dispatch(setCursorIndex(0));\n}\n\nexport const handleBackSpace = (inputTex: string, index: number, dispatch: AppDispatch) => {\n    if (inputTex.substring(index - 8, index) === \"~\\\\times~\") {\n        const newTex = inputTex.substring(0, index - 8) + inputTex.substring(index);\n        dispatch(setInputTex(newTex));\n        dispatch(decrementIndex(8));\n        dispatch(decrementCursorIndex(1));\n        return;\n    }\n    if (inputTex.charAt(index-1) === \"}\") {\n        const matchedBraceIndex = findMatchingCurlyBrace(inputTex, index-1);\n        console.log(inputTex.substring(matchedBraceIndex-4, matchedBraceIndex+1));\n        if (inputTex.substring(matchedBraceIndex-4, matchedBraceIndex+1) === \"\\\\sqrt\") {\n            const newTex = inputTex.substring(0, matchedBraceIndex-4) + inputTex.substring(index);\n            dispatch(setInputTex(newTex));\n            dispatch(setCurrentIndex(matchedBraceIndex-4));\n            dispatch(decrementCursorIndex(1));\n        }\n        if (inputTex.charAt(matchedBraceIndex) === \"^\") {\n            const newTex = inputTex.substring(0, matchedBraceIndex) + inputTex.substring(index);\n            dispatch(setInputTex(newTex));\n            dispatch(setCurrentIndex(matchedBraceIndex));\n            dispatch(decrementCursorIndex(1));\n        }\n        if (inputTex.charAt(matchedBraceIndex) === \"}\") {\n            const secondMatchedBraceIndex = findMatchingCurlyBrace(inputTex, matchedBraceIndex);\n            if (inputTex.substring(secondMatchedBraceIndex-4, secondMatchedBraceIndex+1) === \"\\\\frac\") {\n                const newTex = inputTex.substring(0, secondMatchedBraceIndex-4) + inputTex.substring(index);\n                dispatch(setInputTex(newTex));\n                dispatch(setCurrentIndex(secondMatchedBraceIndex-4));\n                dispatch(decrementCursorIndex(1));\n            }\n        }\n    }\n    if (inputTex.charAt(index-1) === \")\") {\n        const matchedParenthesisIndex = findMatchingParenthesis(inputTex, index-1);\n        if (inputTex.substring(matchedParenthesisIndex-3, matchedParenthesisIndex+1) === \"\\\\log\") {\n            const newTex = inputTex.substring(0, matchedParenthesisIndex-3) + inputTex.substring(index);\n            dispatch(setInputTex(newTex));\n            dispatch(setCurrentIndex(matchedParenthesisIndex-3));\n            dispatch(decrementCursorIndex(4));\n        }\n        if (inputTex.substring(matchedParenthesisIndex-3, matchedParenthesisIndex+1) === \"\\\\sin\") {\n            const newTex = inputTex.substring(0, matchedParenthesisIndex-3) + inputTex.substring(index);\n            dispatch(setInputTex(newTex));\n            dispatch(setCurrentIndex(matchedParenthesisIndex-3));\n            dispatch(decrementCursorIndex(4));\n        }\n        if (inputTex.substring(matchedParenthesisIndex-3, matchedParenthesisIndex+1) === \"\\\\cos\") {\n            const newTex = inputTex.substring(0, matchedParenthesisIndex-3) + inputTex.substring(index);\n            dispatch(setInputTex(newTex));\n            dispatch(setCurrentIndex(matchedParenthesisIndex-3));\n            dispatch(decrementCursorIndex(4));\n        }\n        if (inputTex.substring(matchedParenthesisIndex-3, matchedParenthesisIndex+1) === \"\\\\tan\") {\n            const newTex = inputTex.substring(0, matchedParenthesisIndex-3) + inputTex.substring(index);\n            dispatch(setInputTex(newTex));\n            dispatch(setCurrentIndex(matchedParenthesisIndex-3));\n            dispatch(decrementCursorIndex(4));\n        }\n        if (inputTex.substring(matchedParenthesisIndex-2, matchedParenthesisIndex+1) === \"\\\\ln\") {\n            const newTex = inputTex.substring(0, matchedParenthesisIndex-2) + inputTex.substring(index);\n            dispatch(setInputTex(newTex));\n            dispatch(setCurrentIndex(matchedParenthesisIndex-2));\n            dispatch(decrementCursorIndex(3));\n        }\n    }\n    const regex = /[0-9exyzπθ+\\-]+/g;\n    if (regex.test(inputTex.charAt(index-1))) {\n        const newTex = inputTex.substring(0, index-1) + inputTex.substring(index);\n        dispatch(setInputTex(newTex));\n        dispatch(decrementIndex(1));\n        dispatch(decrementCursorIndex(1));\n        return;\n    }\n}\n","import React from 'react';\nimport { ChevronLeft, ChevronRight, Delete } from 'lucide-react';\nimport Options from '../Options';\nimport { AppDispatch, RootState } from \"@/redux/store\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {  handleClear, handleBackSpace, handleNext, handlePrev } from '@/redux/handler';\n\nconst ArrowKeys: React.FC = ({}) => {\n    const dispatch = useDispatch<AppDispatch>();\n    const index = useSelector((state: RootState) => state.index.currentIndex);\n    const inputTex = useSelector((state: RootState) => state.inputTex.value);\n    \n\n    return (\n        <div className=\"flex flex-row justify-between\">\n            <Options/>\n            <div className=\"grid grid-cols-2 gap-2 mt-2 max-w-full\">\n                <button\n                    className=\"px-4 sm:px-6 rounded-lg font-bold text-2xl font-mono text-white bg-white-mode-light-blue dark:border-muted-teal dark:bg-blue-500 sm:hover:scale-105 active:scale-95 transform ease-in-out duration-150\"\n                    onClick={()=>handleClear(dispatch)}\n                >\n                    <h1>C</h1>\n                </button>\n                <button\n                    className=\"flex justify-center px-4 sm:px-6 rounded-lg font-mono text-white bg-white-mode-light-blue dark:border-muted-teal dark:bg-blue-500 sm:hover:scale-105 active:scale-95 transform ease-in-out duration-150\"\n                    onClick={()=>handleBackSpace(inputTex, index, dispatch)}\n                >\n                    <Delete className=\"h-10 w-10 sm:h-11 sm:w-11\"/>\n                </button>\n                <button\n                    className=\"flex justify-center px-4 sm:px-6 rounded-lg font-mono text-white bg-white-mode-light-blue dark:border-muted-teal dark:bg-blue-500 sm:hover:scale-105 active:scale-95 transform ease-in-out duration-150\"\n                    onClick={()=>handlePrev(inputTex, index, dispatch)}\n                >\n                    <ChevronLeft className=\"h-10 w-10 sm:h-11 sm:w-11\"/>\n                </button>\n                <button\n                    className=\"flex justify-center px-4 sm:px-6 rounded-lg font-mono text-white bg-white-mode-light-blue dark:border-muted-teal dark:bg-blue-500 sm:hover:scale-105 active:scale-95 transform ease-in-out duration-150\"\n                    onClick={()=>handleNext(inputTex, index, dispatch)}\n                    >\n                    <ChevronRight className=\"h-10 w-10 sm:h-11 sm:w-11\"/>\n                </button>\n            </div>\n        </div>\n    );\n};\n\n\nexport default ArrowKeys;","import React from 'react';\nimport KeyboardButton from './KeyboardButton';\nimport ArrowKeys from './NavigationKeys';\n\nconst Keyboard: React.FC = ({}) => {\n    return (\n        <>\n            <ArrowKeys/>\n            <div className=\"grid grid-cols-5 gap-2 mt-1.5\">\n            <KeyboardButton>1</KeyboardButton>\n            <KeyboardButton>2</KeyboardButton>\n            <KeyboardButton>3</KeyboardButton>\n            <KeyboardButton>~\\times~</KeyboardButton>\n            <KeyboardButton>\\div</KeyboardButton>\n            <KeyboardButton>4</KeyboardButton>\n            <KeyboardButton>5</KeyboardButton>\n            <KeyboardButton>6</KeyboardButton>\n            <KeyboardButton>+</KeyboardButton>\n            <KeyboardButton>-</KeyboardButton>\n            <KeyboardButton>7</KeyboardButton>\n            <KeyboardButton>8</KeyboardButton>\n            <KeyboardButton>9</KeyboardButton>\n            <KeyboardButton specieal>x</KeyboardButton>\n            <KeyboardButton specieal>y</KeyboardButton>\n            <KeyboardButton specieal>e</KeyboardButton>\n            <KeyboardButton>0</KeyboardButton>\n            <KeyboardButton specieal>π</KeyboardButton>\n            <KeyboardButton specieal>z</KeyboardButton>\n            <KeyboardButton specieal>θ</KeyboardButton>\n            <KeyboardButton specieal>{\"e^{x}\"}</KeyboardButton>\n            <KeyboardButton specieal>{\"[~]^{[~]}\"}</KeyboardButton>\n            <KeyboardButton specieal>{\"[~]^{-1}\"}</KeyboardButton>\n            <KeyboardButton specieal>{\"\\\\sqrt{~}\"}</KeyboardButton>\n            <KeyboardButton specieal>{\"\\\\ln(~)\"}</KeyboardButton>\n            <KeyboardButton specieal>{\"\\\\log{(~)}\"}</KeyboardButton>\n            <KeyboardButton specieal>{\"\\\\sin(~)\"}</KeyboardButton>\n            <KeyboardButton specieal>{\"\\\\cos(~)\"}</KeyboardButton>\n            <KeyboardButton specieal>{\"\\\\tan(~)\"}</KeyboardButton>\n            <KeyboardButton specieal>=</KeyboardButton>\n            </div>\n        </>\n    );\n};\n\n\nexport default Keyboard;","'use client';\nimport React, { useEffect } from 'react';\n// import SelectOperatin from './SelectOperation';\nimport Display from './Display';\nimport Keyboard from './Keyboard/Keyboard';\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState, AppDispatch } from \"../redux/store\";\nimport { setInputTex } from \"../redux/inputTexSlice\";\nimport { clearResultTex } from '@/redux/resultTexSlice';\nimport { useAnswerToggleContext } from '@/context/context';\nimport { usePathname } from 'next/navigation';\n\nconst Calculator: React.FC = () => {\n  const { setAnswerToggle } = useAnswerToggleContext();\n  const inputTex = useSelector((state: RootState) => state.inputTex.value);\n  const index = useSelector((state: RootState) => state.index.currentIndex);\n  const dispatch = useDispatch<AppDispatch>();\n  const operation = usePathname().split(\"/\").pop();\n\n  useEffect(() => {\n    setAnswerToggle(false)\n    dispatch(clearResultTex())\n  }, [inputTex]);\n\n  useEffect(() => {\n    dispatch(clearResultTex())\n    setAnswerToggle(false)\n  }, [operation]);\n\n  useEffect(() => {\n    const cleanedInputTex = inputTex.replace(\"|\", \"\");\n    const newInputTex = cleanedInputTex.slice(0, index) + \"|\" + cleanedInputTex.slice(index);\n    dispatch(setInputTex(newInputTex));\n  }, [index]);\n  //   event.preventDefault();\n  //   setAnswerToggle(true);\n\n  //   if (!inputTex || !operation || !wrt) {\n  //     window.alert(\"Input missing\")\n  //     console.error(\"Invalid input\");\n  //     return;\n  //   }\n\n  //   const eqn = inputTex.replace(\"|\", \"\").replaceAll(\"π\", \"\\\\pi\").replaceAll(\"θ\", \"\\\\theta\");\n  //   switch (operation) {\n  //     case \"derivative\":\n  //       const derivative = await calculateDerivative(eqn, wrt);\n  //       setResultTex(derivative.result);\n  //       break;\n  //     case \"integral\":\n  //       console.log(eqn)\n  //       const integral = await calculateIntegral(eqn, wrt);\n  //       setResultTex(integral.result);\n  //       break;\n  //     default:\n  //       console.error(\"Invalid operation\");\n  //   }\n  // };\n\n  return (\n    <div className=\"flex flex-col items-center w-fit sm:w-full mx-4 \">\n      <div className=\"my-4 w-full sm:w-fit\">\n        <Display/>\n        <Keyboard/>\n      </div>\n    </div>\n  );\n};\n\nexport default Calculator;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nconst resultTexSlice = createSlice({\n    name: \"resultTex\",\n    initialState: { value: \"\" },\n    reducers: {\n        setResultTex: (state, action: PayloadAction<string>) => {\n            state.value = action.payload;\n        },\n        clearResultTex: (state) => {\n            state.value = \"\";\n        }\n    }\n});\n\nexport const { setResultTex, clearResultTex } = resultTexSlice.actions;\nexport default resultTexSlice.reducer; ","import(/* webpackMode: \"eager\", webpackExports: [\"default\"] */ \"/Users/masrur-mmrs/Documents/calculus-calculator/calculus-calculator-frontend/src/components/Calculator.tsx\");\n"],"names":["inputTexSlice","createSlice","name","initialState","value","reducers","setInputTex","state","action","payload","appendInputTex","insertTex","index","tex","slice","clearInputTex","actions","reducer","AnswerToggleContext","createContext","undefined","AnswerToggleProvider","children","answerToggle","setAnswerToggle","useState","Provider","context","useContext","indexSlice","currentIndex","setCurrentIndex","incrementIndex","decrementIndex","wrtSlice","setWrt","cursorSlice","setCursorIndex","incrementCursorIndex","decrementCursorIndex","div","Loader","className","displayHeader","fontSize","fontWeight","color","overflow","position","translate","Display","useAnswerToggleContext","displayTex","useSelector","inputTex","resultTex","wrt","operation","usePathname","split","pop","previewPrefix","answerSuffix","AnimatePresence","initial","motion","opacity","y","animate","exit","style","h3","span","Latex","p","displayMode","scale","findMatchingCurlyBrace","inputString","braceCount","charAt","process","calculateDerivative","expression","variable","res","fetch","BACKEND_URL","method","headers","body","JSON","stringify","json","calculateIntegral","KeyboardButton","specieal","dispatch","useDispatch","fetchResult","eqn","replace","replaceAll","derivative","setResultTex","result","console","log","integral","error","button","cn","inputs","twMerge","clsx","onClick","handleOnClick","toString","matches","match","lastMatch","length","lastMatchIndex","lastIndexOf","newTex","boxedMatches","boxedInverseMatches","Options","label","htmlFor","select","id","onChange","event","target","option","defaultChecked","handleNext","substring","nextBraceIndex","indexOf","handleBackSpace","matchedBraceIndex","secondMatchedBraceIndex","matchedParenthesisIndex","findMatchingParenthesis","test","ArrowKeys","handleClear","h1","Delete","handlePrev","ChevronLeft","ChevronRight","Calculator","useEffect","clearResultTex","cleanedInputTex","newInputTex","Keyboard","resultTexSlice"],"sourceRoot":"","ignoreList":[]}