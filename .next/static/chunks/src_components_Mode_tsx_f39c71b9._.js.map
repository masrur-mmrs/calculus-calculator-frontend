{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/masrur-mmrs/Documents/calculus-calculator/calculus-calculator-frontend/src/components/Mode.tsx"],"sourcesContent":["\"use client\"\n\nimport type { Variants } from \"motion/react\"\nimport * as motion from \"motion/react-client\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { useRouter } from \"next/navigation\"\n\nexport default function Variants() {\n    const [isOpen, setIsOpen] = useState(false)\n    const containerRef = useRef<HTMLDivElement>(null)\n    const { height } = useDimensions(containerRef)\n    const modes = [\"basic\", \"derivative\", \"integral\"]\n\n    return (\n        <div>\n            <div style={container}>\n                <motion.nav\n                    initial={false}\n                    animate={isOpen ? \"open\" : \"closed\"}\n                    custom={height}\n                    ref={containerRef}\n                    style={nav}\n                >\n                    <motion.div style={background} variants={sidebarVariants} />\n                    {isOpen&&<Navigation show={isOpen} toggle={() => setIsOpen(!isOpen)} modes={modes}/>}\n                    {/* <Navigation show={isOpen} toggle={() => setIsOpen(!isOpen)} modes={modes}/> */}\n                    <MenuToggle toggle={() => setIsOpen(!isOpen)} />\n                </motion.nav>\n            </div>\n        </div>\n    )\n}\n\nconst navVariants = {\n    open: {\n        transition: { staggerChildren: 0.07, delayChildren: 0.2 },\n    },\n    closed: {\n        transition: { staggerChildren: 0.05, staggerDirection: -1 },\n    },\n}\n\nconst Navigation = ({ modes, show, toggle } : { modes: string[], show: boolean, toggle: () => void }) => (\n    <motion.ul style={list} variants={navVariants}>\n        {modes.map((m, i) => (\n            <MenuItem i={i} m={m} key={i} show={show} toggle={toggle} />\n        ))}\n    </motion.ul>\n)\n\n// const itemVariants = {\n//     open: {\n//         y: 0,\n//         opacity: 1,\n//         transition: {\n//             y: { stiffness: 1000, velocity: -100 },\n//             delay: 0.2\n//         },\n//     },\n//     closed: {\n//         y: 50,\n//         opacity: 0,\n//         transition: {\n//             y: { stiffness: 1000 },\n//             delay: 0.2\n//         },\n//     },\n// }\n\n// const colors = [\"#FF008C\", \"#D309E1\", \"#9C1AFF\", \"#7700FF\", \"#4400FF\"]\n\nconst MenuItem = ({ m, i, show, toggle }: { m: string, i: number, show: boolean, toggle: () => void }) => {\n    const router  = useRouter();\n    return (\n            <motion.div>\n                <motion.li\n                    style={listItem}\n                    initial={{ y: 50, opacity: 0 }}\n                    animate={{ \n                        y: show ? 0 : 50,\n                        opacity: show ? 1 : 0,\n                        transition: {\n                            y: { stiffness: 1000, velocity: -100 },\n                        }\n                    }}\n                    whileHover={{ scale: 1.1 }}\n                    whileTap={{ scale: 0.95 }}\n                    onClick={() => {\n                        router.push(m);\n                        toggle();\n                    }}\n                    key={i}\n                >\n                    {m.toUpperCase()}\n                </motion.li>\n            </motion.div>\n        )\n}\n\nconst sidebarVariants = {\n    open: (height = 1000) => ({\n        clipPath: `circle(${height * 2 + 200}px at 40px 40px)`,\n        transition: {\n            type: \"spring\",\n            stiffness: 20,\n            restDelta: 2,\n        },\n    }),\n    closed: {\n        clipPath: \"circle(30px at 40px 40px)\",\n        transition: {\n            delay: 0.2,\n            type: \"spring\",\n            stiffness: 400,\n            damping: 40,\n        },\n    },\n}\n\ninterface PathProps {\n    d?: string\n    variants: Variants\n    transition?: { duration: number }\n}\n\nconst Path = (props: PathProps) => (\n    <motion.path\n        fill=\"transparent\"\n        strokeWidth=\"3\"\n        stroke=\"white\"\n        strokeLinecap=\"round\"\n        {...props}\n    />\n)\n\nconst MenuToggle = ({ toggle }: { toggle: () => void }) => (\n    <button style={toggleContainer} onClick={toggle}>\n        <svg width=\"23\" height=\"23\" viewBox=\"0 0 23 23\">\n            <Path\n                variants={{\n                    closed: { d: \"M 2 2.5 L 20 2.5\" },\n                    open: { d: \"M 3 16.5 L 17 2.5\" },\n                }}\n            />\n            <Path\n                d=\"M 2 9.423 L 20 9.423\"\n                variants={{\n                    closed: { opacity: 1 },\n                    open: { opacity: 0 },\n                }}\n                transition={{ duration: 0.1 }}\n            />\n            <Path\n                variants={{\n                    closed: { d: \"M 2 16.346 L 20 16.346\" },\n                    open: { d: \"M 3 2.5 L 17 16.346\" },\n                }}\n            />\n        </svg>\n    </button>\n)\n\n/**\n * ==============   Styles   ================\n */\n\nconst container: React.CSSProperties = {\n    position: \"absolute\",\n    display: \"flex\",\n    top: 0,\n    left: 0,\n    // zIndex: 50,\n    justifyContent: \"flex-start\",\n    alignItems: \"stretch\",\n    flex: 1,\n    width: \"100%\",\n    maxWidth: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"var(--accent)\",\n    borderRadius: 20,\n    overflow: \"hidden\",\n}\n\nconst nav: React.CSSProperties = {\n    width: \"50vw\",\n    height: \"100%\"\n}\n\nconst background: React.CSSProperties = {\n    backgroundColor: \"#2b7fff\",\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    bottom: 0,\n    zIndex: 10,\n    width: \"50vw\",\n    height: \"100%\"\n}\n\nconst toggleContainer: React.CSSProperties = {\n    outline: \"none\",\n    border: \"none\",\n    WebkitUserSelect: \"none\",\n    MozUserSelect: \"none\",\n    cursor: \"pointer\",\n    position: \"relative\",\n    top: 18,\n    left: 28,\n    width: 50,\n    height: 50,\n    borderRadius: \"50%\",\n    background: \"transparent\",\n    zIndex: 20,\n}\n\nconst list: React.CSSProperties = {\n    listStyle: \"none\",\n    padding: 25,\n    margin: 0,\n    position: \"absolute\",\n    top: 80,\n    width: 230,\n    zIndex: 20,\n}\n\nconst listItem: React.CSSProperties = {\n    display: \"flex\",\n    color: \"white\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 2,\n    margin: 20,\n    listStyle: \"none\",\n    marginBottom: 20,\n    marginLeft: 50,\n    marginRight: 30,\n    cursor: \"pointer\",\n    border: \"2px solid white\",\n    borderRadius: 8,\n}\n\n/**\n * ==============   Utils   ================\n */\n\n// Naive implementation - in reality would want to attach\n// a window or resize listener. Also use state/layoutEffect instead of ref/effect\n// if this is important to know on initial client render.\n// It would be safer to  return null for unmeasured states.\nconst useDimensions = (ref: React.RefObject<HTMLDivElement | null>) => {\n    const dimensions = useRef({ width: 0, height: 0 })\n\n    useEffect(() => {\n        if (ref.current) {\n            dimensions.current.width = ref.current.offsetWidth\n            dimensions.current.height = ref.current.offsetHeight\n        }\n    }, [ref])\n\n    return dimensions.current\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 393, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}