{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/masrur-mmrs/Documents/calculus-calculator/calculus-calculator-frontend/src/redux/inputTexSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nconst inputTexSlice = createSlice({\n  name: \"inputTex\",\n  initialState: { value: \"\" },\n  reducers: {\n    setInputTex: (state, action: PayloadAction<string>) => {\n        state.value = action.payload;\n    },\n    appendInputTex: (state, action: PayloadAction<string>) => {\n      state.value += action.payload;\n    },\n    insertTex: (state, action: PayloadAction<{ index: number, tex: string }>) => {\n      const { index, tex } = action.payload;\n      state.value = state.value.slice(0, index) + tex + state.value.slice(index);\n    },\n    clearInputTex: (state) => {\n        state.value = \"\";\n    }\n  },\n});\n\nexport const { setInputTex, appendInputTex, insertTex, clearInputTex } = inputTexSlice.actions;\nexport default inputTexSlice.reducer;\n"],"names":[],"mappings":";;;;;;;AAAA;;AAEA,MAAM,gBAAgB,CAAA,GAAA,8LAAA,CAAA,cAAW,AAAD,EAAE;IAChC,MAAM;IACN,cAAc;QAAE,OAAO;IAAG;IAC1B,UAAU;QACR,aAAa,CAAC,OAAO;YACjB,MAAM,KAAK,GAAG,OAAO,OAAO;QAChC;QACA,gBAAgB,CAAC,OAAO;YACtB,MAAM,KAAK,IAAI,OAAO,OAAO;QAC/B;QACA,WAAW,CAAC,OAAO;YACjB,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,OAAO,OAAO;YACrC,MAAM,KAAK,GAAG,MAAM,KAAK,CAAC,KAAK,CAAC,GAAG,SAAS,MAAM,MAAM,KAAK,CAAC,KAAK,CAAC;QACtE;QACA,eAAe,CAAC;YACZ,MAAM,KAAK,GAAG;QAClB;IACF;AACF;AAEO,MAAM,EAAE,WAAW,EAAE,cAAc,EAAE,SAAS,EAAE,aAAa,EAAE,GAAG,cAAc,OAAO;uCAC/E,cAAc,OAAO","debugId":null}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":["file:///Users/masrur-mmrs/Documents/calculus-calculator/calculus-calculator-frontend/src/redux/indexSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nconst indexSlice = createSlice({\n    name: \"index\",\n    initialState: { currentIndex: 0 },\n    reducers: {\n        setCurrentIndex(state, action: PayloadAction<number>) {\n            state.currentIndex = action.payload;\n        },\n        incrementIndex(state, action: PayloadAction<number>) {\n            state.currentIndex += action.payload;\n        },\n        decrementIndex(state, action: PayloadAction<number>) {\n            state.currentIndex -= action.payload;\n        },\n    },\n});\n\nexport const { setCurrentIndex, incrementIndex, decrementIndex } = indexSlice.actions;\nexport default indexSlice.reducer;"],"names":[],"mappings":";;;;;;AAAA;;AAEA,MAAM,aAAa,CAAA,GAAA,8LAAA,CAAA,cAAW,AAAD,EAAE;IAC3B,MAAM;IACN,cAAc;QAAE,cAAc;IAAE;IAChC,UAAU;QACN,iBAAgB,KAAK,EAAE,MAA6B;YAChD,MAAM,YAAY,GAAG,OAAO,OAAO;QACvC;QACA,gBAAe,KAAK,EAAE,MAA6B;YAC/C,MAAM,YAAY,IAAI,OAAO,OAAO;QACxC;QACA,gBAAe,KAAK,EAAE,MAA6B;YAC/C,MAAM,YAAY,IAAI,OAAO,OAAO;QACxC;IACJ;AACJ;AAEO,MAAM,EAAE,eAAe,EAAE,cAAc,EAAE,cAAc,EAAE,GAAG,WAAW,OAAO;uCACtE,WAAW,OAAO","debugId":null}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file:///Users/masrur-mmrs/Documents/calculus-calculator/calculus-calculator-frontend/src/redux/cursorSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nconst cursorSlice = createSlice({\n    name: \"cursor\",\n    initialState: { index: 0 },\n    reducers: {\n        setCursorIndex(state, action: PayloadAction<number>) {\n            state.index = action.payload;\n        },\n        incrementCursorIndex(state, action: PayloadAction<number>) {\n            state.index += action.payload;\n        },\n        decrementCursorIndex(state, action: PayloadAction<number>) {\n            state.index -= action.payload;\n        },\n    },\n});\n\nexport const { setCursorIndex, incrementCursorIndex, decrementCursorIndex } = cursorSlice.actions;\nexport default cursorSlice.reducer;"],"names":[],"mappings":";;;;;;AAAA;;AAEA,MAAM,cAAc,CAAA,GAAA,8LAAA,CAAA,cAAW,AAAD,EAAE;IAC5B,MAAM;IACN,cAAc;QAAE,OAAO;IAAE;IACzB,UAAU;QACN,gBAAe,KAAK,EAAE,MAA6B;YAC/C,MAAM,KAAK,GAAG,OAAO,OAAO;QAChC;QACA,sBAAqB,KAAK,EAAE,MAA6B;YACrD,MAAM,KAAK,IAAI,OAAO,OAAO;QACjC;QACA,sBAAqB,KAAK,EAAE,MAA6B;YACrD,MAAM,KAAK,IAAI,OAAO,OAAO;QACjC;IACJ;AACJ;AAEO,MAAM,EAAE,cAAc,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,GAAG,YAAY,OAAO;uCAClF,YAAY,OAAO","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///Users/masrur-mmrs/Documents/calculus-calculator/calculus-calculator-frontend/src/redux/resultTexSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nconst resultTexSlice = createSlice({\n    name: \"resultTex\",\n    initialState: { value: \"\" },\n    reducers: {\n        setResultTex: (state, action: PayloadAction<string>) => {\n            state.value = action.payload;\n        },\n        clearResultTex: (state) => {\n            state.value = \"\";\n        }\n    }\n});\n\nexport const { setResultTex, clearResultTex } = resultTexSlice.actions;\nexport default resultTexSlice.reducer; "],"names":[],"mappings":";;;;;AAAA;;AAEA,MAAM,iBAAiB,CAAA,GAAA,8LAAA,CAAA,cAAW,AAAD,EAAE;IAC/B,MAAM;IACN,cAAc;QAAE,OAAO;IAAG;IAC1B,UAAU;QACN,cAAc,CAAC,OAAO;YAClB,MAAM,KAAK,GAAG,OAAO,OAAO;QAChC;QACA,gBAAgB,CAAC;YACb,MAAM,KAAK,GAAG;QAClB;IACJ;AACJ;AAEO,MAAM,EAAE,YAAY,EAAE,cAAc,EAAE,GAAG,eAAe,OAAO;uCACvD,eAAe,OAAO","debugId":null}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":["file:///Users/masrur-mmrs/Documents/calculus-calculator/calculus-calculator-frontend/src/redux/wrtSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nconst wrtSlice = createSlice({\n    name: \"wrt\",\n    initialState: { value: \"x\" },\n    reducers: {\n        setWrt: (state, action: PayloadAction<string>) => {\n            state.value = action.payload;\n        }\n    }\n})\n\nexport const { setWrt } = wrtSlice.actions;\nexport default wrtSlice.reducer;"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,WAAW,CAAA,GAAA,8LAAA,CAAA,cAAW,AAAD,EAAE;IACzB,MAAM;IACN,cAAc;QAAE,OAAO;IAAI;IAC3B,UAAU;QACN,QAAQ,CAAC,OAAO;YACZ,MAAM,KAAK,GAAG,OAAO,OAAO;QAChC;IACJ;AACJ;AAEO,MAAM,EAAE,MAAM,EAAE,GAAG,SAAS,OAAO;uCAC3B,SAAS,OAAO","debugId":null}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file:///Users/masrur-mmrs/Documents/calculus-calculator/calculus-calculator-frontend/src/redux/oodSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nconst oodSlice = createSlice({\n    name: \"ood\",\n    initialState: { value: \"1\" },\n    reducers: {\n        setOod: (state, action: PayloadAction<string>) => {\n            state.value = action.payload;\n        }\n    }\n})\n\nexport const { setOod } = oodSlice.actions;\nexport default oodSlice.reducer;"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,WAAW,CAAA,GAAA,8LAAA,CAAA,cAAW,AAAD,EAAE;IACzB,MAAM;IACN,cAAc;QAAE,OAAO;IAAI;IAC3B,UAAU;QACN,QAAQ,CAAC,OAAO;YACZ,MAAM,KAAK,GAAG,OAAO,OAAO;QAChC;IACJ;AACJ;AAEO,MAAM,EAAE,MAAM,EAAE,GAAG,SAAS,OAAO;uCAC3B,SAAS,OAAO","debugId":null}},
    {"offset": {"line": 202, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":["file:///Users/masrur-mmrs/Documents/calculus-calculator/calculus-calculator-frontend/src/redux/store.ts"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\"\nimport inputTexReducer from \"./inputTexSlice\"\nimport indexSlice from \"./indexSlice\"\nimport cursorSlice from \"./cursorSlice\"\nimport resultTexSlice from \"./resultTexSlice\"\nimport wrtSlice from \"./wrtSlice\"\nimport oodSlice from \"./oodSlice\"\n\nexport const store = configureStore({\n    reducer: { \n        inputTex: inputTexReducer,\n        index: indexSlice,\n        cursor: cursorSlice,\n        resultTex: resultTexSlice,\n        wrt: wrtSlice,\n        ood: oodSlice,\n     },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAEO,MAAM,QAAQ,CAAA,GAAA,8LAAA,CAAA,iBAAc,AAAD,EAAE;IAChC,SAAS;QACL,UAAU,gIAAA,CAAA,UAAe;QACzB,OAAO,6HAAA,CAAA,UAAU;QACjB,QAAQ,8HAAA,CAAA,UAAW;QACnB,WAAW,iIAAA,CAAA,UAAc;QACzB,KAAK,2HAAA,CAAA,UAAQ;QACb,KAAK,2HAAA,CAAA,UAAQ;IAChB;AACL","debugId":null}},
    {"offset": {"line": 238, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///Users/masrur-mmrs/Documents/calculus-calculator/calculus-calculator-frontend/src/redux/provider.tsx"],"sourcesContent":["'use client';\nimport { ReactNode } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\n\nconst ReduxProvider = ({ children }: { children: ReactNode }) => {\n  return <Provider store={store}>{children}</Provider>;\n};\n\nexport default ReduxProvider;\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKA,MAAM,gBAAgB,CAAC,EAAE,QAAQ,EAA2B;IAC1D,qBAAO,6LAAC,4JAAA,CAAA,WAAQ;QAAC,OAAO,wHAAA,CAAA,QAAK;kBAAG;;;;;;AAClC;KAFM;uCAIS","debugId":null}},
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 277, "column": 0}, "map": {"version":3,"sources":["file:///Users/masrur-mmrs/Documents/calculus-calculator/calculus-calculator-frontend/src/context/context.tsx"],"sourcesContent":["'use client'\nimport { createContext, useContext, useState, ReactNode } from \"react\";\n\ntype AnswerToggleContextType = {\n    answerToggle: boolean;\n    setAnswerToggle: (state: boolean) => void;\n}\n\nconst AnswerToggleContext = createContext<AnswerToggleContextType | undefined>(undefined);\n\nexport const AnswerToggleProvider = ({ children } : { children: ReactNode }) => {\n    const [ answerToggle, setAnswerToggle ] = useState<boolean>(false);\n    return (\n        <AnswerToggleContext.Provider value={{ answerToggle, setAnswerToggle }}>\n            {children}\n        </AnswerToggleContext.Provider>\n    )\n}\n\nexport const useAnswerToggleContext = () => {\n    const context = useContext(AnswerToggleContext);\n    if (!context) {\n        throw new Error(\"useAnswerToggle must be used within a AnswerToggleProvider\");\n    }\n    return context;\n}\n\n"],"names":[],"mappings":";;;;;AACA;;;AADA;;AAQA,MAAM,oCAAsB,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAuC;AAExE,MAAM,uBAAuB,CAAC,EAAE,QAAQ,EAA4B;;IACvE,MAAM,CAAE,cAAc,gBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAC5D,qBACI,6LAAC,oBAAoB,QAAQ;QAAC,OAAO;YAAE;YAAc;QAAgB;kBAChE;;;;;;AAGb;GAPa;KAAA;AASN,MAAM,yBAAyB;;IAClC,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACV,MAAM,IAAI,MAAM;IACpB;IACA,OAAO;AACX;IANa","debugId":null}},
    {"offset": {"line": 319, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}