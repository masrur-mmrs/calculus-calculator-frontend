{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\nimport type { NextRequest } from 'next/server'\n\nexport async function middleware(request: NextRequest) {\n  const url = new URL(request.url)\n  const token = url.searchParams.get(\"token\")\n\n  if (!token) {\n    return NextResponse.redirect(new URL('/unauthorized', request.url))\n  }\n\n  try {\n    const res = await fetch(`https://lms.titanova.xyz/user/user/VlidateKYC?token=${token}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      cache: 'no-store',\n    })\n\n    if (!res.ok) {\n      return NextResponse.redirect(new URL('/unauthorized', request.url))\n    }\n\n    const data = await res.json()\n    console.log(data)\n\n    if (data === \"Yes\") {\n      const response = NextResponse.redirect(new URL('/derivative', request.url))\n      response.cookies.set('access_token', token, {\n        httpOnly: true,\n        secure: true,\n        path: '/',\n      })\n      return response\n    }\n\n    return NextResponse.redirect(new URL('/unauthorized', request.url))\n  } catch (error) {\n    console.error('Middleware token validation error:', error)\n    return NextResponse.redirect(new URL('/error', request.url))\n  }\n}\n\nexport const config = {\n  matcher: '/',\n}"],"names":[],"mappings":";;;;AAAA;AAAA;;AAGO,eAAe,WAAW,OAAoB;IACnD,MAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;IAC/B,MAAM,QAAQ,IAAI,YAAY,CAAC,GAAG,CAAC;IAEnC,IAAI,CAAC,OAAO;QACV,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,iBAAiB,QAAQ,GAAG;IACnE;IAEA,IAAI;QACF,MAAM,MAAM,MAAM,MAAM,CAAC,oDAAoD,EAAE,OAAO,EAAE;YACtF,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,OAAO;QACT;QAEA,IAAI,CAAC,IAAI,EAAE,EAAE;YACX,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,iBAAiB,QAAQ,GAAG;QACnE;QAEA,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,QAAQ,GAAG,CAAC;QAEZ,IAAI,SAAS,OAAO;YAClB,MAAM,WAAW,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,eAAe,QAAQ,GAAG;YACzE,SAAS,OAAO,CAAC,GAAG,CAAC,gBAAgB,OAAO;gBAC1C,UAAU;gBACV,QAAQ;gBACR,MAAM;YACR;YACA,OAAO;QACT;QAEA,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,iBAAiB,QAAQ,GAAG;IACnE,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,sCAAsC;QACpD,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;IAC5D;AACF;AAEO,MAAM,SAAS;IACpB,SAAS;AACX"}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}